<?xml version='1.0' encoding='UTF-8'?><?xml-stylesheet href="https://www.blogger.com/styles/atom.css" type="text/css"?><feed xmlns='http://www.w3.org/2005/Atom' xmlns:openSearch='http://a9.com/-/spec/opensearchrss/1.0/' xmlns:gd='http://schemas.google.com/g/2005' xmlns:georss='http://www.georss.org/georss' xmlns:thr='http://purl.org/syndication/thread/1.0' xmlns:blogger='http://schemas.google.com/blogger/2008'><id>tag:blogger.com,1999:blog-6637736252081011583</id><updated>2017-03-01T15:08:08.041-08:00</updated><category term='scp'/><category term='word'/><category term='size'/><category term='completion'/><category term='finding'/><category term='last'/><category term='enable'/><category term='implementation'/><category term='highlight'/><category term='config'/><category term='files'/><category term='registers'/><category term='visual'/><category term='basic'/><category term='tac'/><category term='mp3'/><category term='levels'/><category term='pattern'/><category term='repeat'/><category term='maatkit'/><category term='pager'/><category term='audio'/><category term='suggestions'/><category term='preserve'/><category term='beginning'/><category term='remove'/><category term='mark'/><category term='buffer'/><category term='autocomplete'/><category term='convert'/><category term='paste'/><category term='clojure'/><category term='modified'/><category term='x.org'/><category term='deleted'/><category term='single'/><category term='autoplay'/><category term='expansion'/><category term='unsplit'/><category term='substitution'/><category term='below'/><category term='fedora'/><category term='manpage'/><category term='the'/><category term='location'/><category term='sort'/><category term='driver'/><category term='directory'/><category term='file'/><category term='progress'/><category term='on-the-fly'/><category term='howto'/><category term='where'/><category term='hack'/><category term='song'/><category term='regular expressions'/><category term='objects'/><category term='fuser'/><category term='tab'/><category term='transfer'/><category term='duplicate'/><category term='global'/><category term='memcached'/><category term='middle'/><category term='macro'/><category term='control'/><category term='procedure'/><category term='sessions'/><category term='untar'/><category term='external'/><category term='s3virge'/><category term='non-printable'/><category term='grail'/><category term='master'/><category term='tags'/><category term='interactive'/><category term='popd'/><category term='blog'/><category term='connection'/><category term='windows'/><category term='flag'/><category term='javascript'/><category term='scrollbind'/><category term='recover'/><category term='postscript'/><category term='keys'/><category term='been'/><category term='filesystems'/><category term='replication'/><category term='home'/><category term='special'/><category term='text'/><category term='clipboard'/><category term='whatprovides'/><category term='apache'/><category term='stripping'/><category term='scope'/><category term='indent'/><category term='patch'/><category term='backtick'/><category term='recent'/><category term='register'/><category term='beep'/><category term='suffixing'/><category term='hashing'/><category term='quick'/><category term='motion'/><category term='options'/><category term='percentage'/><category term='support'/><category term='formatting'/><category term='uppercase'/><category term='screen'/><category term='subdir'/><category term='above'/><category term='jump'/><category term='shared'/><category term='blogger'/><category term='tips'/><category term='regular'/><category term='reduce'/><category term='sharing'/><category term='under'/><category term='cache'/><category term='insert'/><category term='google'/><category term='character'/><category term='comparison'/><category term='blocking'/><category term='change'/><category term='cookbook'/><category term='git'/><category term='kernel'/><category term='de-dupe'/><category term='programming'/><category term='awk'/><category term='mysql'/><category term='eclipse'/><category term='filter'/><category term='history'/><category term='copy'/><category term='display'/><category term='Perl'/><category term='golden'/><category term='haskell'/><category term='syndrome'/><category term='scrolling'/><category term='check'/><category term='svn'/><category term='shameless'/><category term='tcpdump'/><category term='plugin'/><category term='terminal'/><category term='holy'/><category term='source'/><category term='chmod'/><category term='command'/><category term='ex'/><category term='more'/><category term='disk'/><category term='survival'/><category term='match'/><category term='alternatives'/><category term='find'/><category term='less'/><category term='large'/><category term='set'/><category term='compatible'/><category term='version'/><category term='keyword'/><category term='xubuntu'/><category term='rightleft'/><category term='rails'/><category term='ubuntu'/><category term='syntax'/><category term='expanding'/><category term='directories'/><category term='nautilus'/><category term='os'/><category term='lines'/><category term='s-exp'/><category term='manager'/><category term='yum'/><category term='map'/><category term='commits'/><category term='spaces'/><category term='apt-file'/><category term='same'/><category term='analysis'/><category term='oracle'/><category term='search'/><category term='color'/><category term='shell'/><category term='clear'/><category term='reader'/><category term='ignore'/><category term='esc'/><category term='buffers'/><category term='alias'/><category term='linux'/><category term='forwarding'/><category term='colorscheme'/><category term='modeline'/><category term='echo'/><category term='subtract'/><category term='man'/><category term='package'/><category term='week'/><category term='debian'/><category term='usage'/><category term='effective'/><category term='good'/><category term='mk-table-checksum'/><category term='goto'/><category term='port'/><category term='select'/><category term='gutter'/><category term='truncate'/><category term='manipulation'/><category term='changed'/><category term='yank'/><category term='ext3'/><category term='practices'/><category term='normal'/><category term='language'/><category term='mouse'/><category term='textmate'/><category term='blank'/><category term='alternating'/><category term='install'/><category term='redraw'/><category term='broken'/><category term='swap'/><category term='hidden'/><category term='scala'/><category term='reference'/><category term='tidy'/><category term='states'/><category term='5.2'/><category term='promotion'/><category term='inside'/><category term='ownership'/><category term='flash'/><category term='php'/><category term='vimgrep'/><category term='restore'/><category term='characters'/><category term='authentication'/><category term='brace'/><category term='slave'/><category term='favorite'/><category term='detect'/><category term='tao'/><category term='star'/><category term='blackhole'/><category term='replace'/><category term='paragraph'/><category term='tree'/><category term='commands'/><category term='ctrl-m'/><category term='append'/><category term='tricks'/><category term='proxy'/><category term='filesystem'/><category term='easier'/><category term='emacs'/><category term='self'/><category term='execute'/><category term='rebuild'/><category term='i&apos;ve'/><category term='toothpick'/><category term='literal'/><category term='meter'/><category term='schemes'/><category term='unicode'/><category term='clicking'/><category term='netcat'/><category term='lisp'/><category term='snipmate'/><category term='line'/><category term='hardcopy'/><category term='table'/><category term='ssh'/><category term='posts'/><category term='unhighlight'/><category term='reformat'/><category term='agents'/><category term='trick'/><category term='add'/><category term='temp'/><category term='hello world'/><category term='gzip'/><category term='diff'/><category term='editing'/><category term='populate'/><category term='multimaster'/><category term='tar'/><category term='digraph'/><category term='os x'/><category term='plugins'/><category term='explorer'/><category term='golf'/><category term='disable'/><category term='autocompletion'/><category term='gnome'/><category term='swapcase'/><category term='bash'/><category term='cygwin'/><category term='pdf'/><category term='dbd'/><category term='drag'/><category term='fix'/><category term='block'/><category term='video'/><category term='resize'/><category term='ascii'/><category term='tabs'/><category term='mmm'/><category term='help'/><category term='twisten.fm'/><category term='centos'/><category term='binary'/><category term='mkfifo'/><category term='end'/><category term='ruler'/><category term='best'/><category term='daily'/><category term='leaning'/><category term='lowercase'/><category term='vim'/><category term='maxclients'/><category term='grooveshark'/><category term='key'/><category term='dbi'/><category term='shift'/><category term='numpad'/><category term='test'/><category term='browsing'/><category term='remap'/><category term='remote'/><category term='level'/><category term='earlier'/><category term='management'/><category term='question'/><category term='bootlogd'/><category term='each'/><category term='column'/><category term='console'/><category term='efficiency'/><category term='script'/><category term='equal'/><category term='horizontally'/><category term='apt'/><category term='mode'/><category term='zsh'/><category term='awesome'/><category term='stdin'/><category term='putty'/><category term='next'/><category term='later'/><category term='hacks'/><category term='piping'/><category term='auto'/><category term='mapleader'/><category term='undo'/><category term='dailyvim'/><category term='comment'/><category term='vimclojure'/><category term='mtime'/><category term='backup'/><category term='features'/><category term='substring'/><category term='dot'/><category term='sandbox'/><category term='pushd'/><category term='previous'/><category term='grep'/><category term='functional'/><category term='ctime'/><category term='eclim'/><category term='alternate'/><category term='uncomment'/><category term='window'/><category term='recursively'/><category term='instance method'/><category term='ctrl-o'/><category term='editor'/><category term='atime'/><category term='cursor'/><category term='names'/><category term='position'/><category term='range'/><category term='snippit'/><category term='project'/><category term='rule recursion'/><category term='spell'/><category term='fuse'/><category term='split'/><category term='all'/><category term='lite'/><category term='crash'/><category term='grab'/><category term='share'/><category term='firefox'/><category term='rows'/><category term='reverse'/><category term='open'/><category term='expression'/><category term='start'/><category term='of'/><category term='toggle'/><category term='reload vimrc'/><category term='items'/><category term='gnu'/><category term='supertab'/><category term='schebang'/><category term='vimperator'/><category term='close window'/><category term='substition'/><category term='number'/><category term='quickly'/><category term='count'/><category term='ruby'/><category term='xargs'/><category term='attributes'/><category term='quickfix'/><category term='autowrite'/><category term='erlang'/><category term='words'/><category term='exit'/><category term='filetype'/><category term='agent'/><category term='apocalypse'/><title type='text'>Daily Vim: Text Editor Tips, Tricks, Tutorials, and HOWTOs</title><subtitle type='html'>A blog dedicated to text editing and general exploration of computing knowledge</subtitle><link rel='http://schemas.google.com/g/2005#feed' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default?start-index=51'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default?start-index=51'/><link rel='alternate' type='text/html' href='http://dailyvim.blogspot.com/'/><link rel='hub' href='http://pubsubhubbub.appspot.com/'/><link rel='previous' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default?start-index=26&amp;max-results=25'/><link rel='next' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default?start-index=76&amp;max-results=25'/><author><name>Travis Whitton</name><uri>https://www.blogger.com/profile/14592647486468034166</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='25' height='32' src='//2.bp.blogspot.com/__iSTMw6favA/SKRZVI-XWkI/AAAAAAAAAYc/6xWMySJqLN4/s32-R/willie.jpg'/></author><generator version='7.00' uri='https://www.blogger.com'>Blogger</generator><openSearch:totalResults>254</openSearch:totalResults><openSearch:startIndex>51</openSearch:startIndex><openSearch:itemsPerPage>25</openSearch:itemsPerPage><entry><id>tag:blogger.com,1999:blog-6637736252081011583.post-4034075920016360087</id><published>2009-06-19T05:40:00.000-07:00</published><updated>2009-06-19T05:51:03.500-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='vimclojure'/><category scheme='http://www.blogger.com/atom/ns#' term='clojure'/><category scheme='http://www.blogger.com/atom/ns#' term='agents'/><category scheme='http://www.blogger.com/atom/ns#' term='vim'/><title type='text'>An Introduction to Clojure's Agents</title><content type='html'>For anyone that's interested in alternative programming languages, I've written a &lt;a href="http://travis-whitton.blogspot.com/2009/06/clojures-agents-scientists-monkeys-and_18.html"&gt;lengthy introduction&lt;/a&gt; to &lt;a href="http://clojure.org/"&gt;Clojure's&lt;/a&gt; agents.&lt;br /&gt;&lt;br /&gt;For those unfamiliar with Clojure, it's a modern Lisp running on the JVM with excellent support for concurrency. It allows excellent interoperability with Java, so essentially you get a dynamic and clean programming language with a huge standard library. On the performance front, it's often on par with Java. I've spent a good deal of time learning the language lately, and I have to say that it's very enjoyable to work with.&lt;br /&gt;&lt;br /&gt;One huge bonus of working with Clojure inside Vim is the &lt;a href="http://kotka.de/projects/clojure/vimclojure.html"&gt;VimClojure&lt;/a&gt; project. It allows interactive programming from inside of Vim and proxies code between a stateful &lt;a href="http://martiansoftware.com/nailgun/background.html"&gt;NailGun&lt;/a&gt; server and the editor. To be honest, I wasn't aware that an interactive &lt;a href="http://en.wikipedia.org/wiki/REPL"&gt;REPL&lt;/a&gt; was possible inside of Vim until I installed this, and I'm wondering if there are any other projects out there using similar techniques with different languages.</content><link rel='replies' type='application/atom+xml' href='https://dailyvim.blogspot.com/feeds/4034075920016360087/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=6637736252081011583&amp;postID=4034075920016360087' title='3 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/4034075920016360087'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/4034075920016360087'/><link rel='alternate' type='text/html' href='http://dailyvim.blogspot.com/2009/06/introduction-to-clojures-agents.html' title='An Introduction to Clojure&apos;s Agents'/><author><name>Travis Whitton</name><uri>https://www.blogger.com/profile/14592647486468034166</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='25' height='32' src='//2.bp.blogspot.com/__iSTMw6favA/SKRZVI-XWkI/AAAAAAAAAYc/6xWMySJqLN4/s32-R/willie.jpg'/></author><thr:total>3</thr:total></entry><entry><id>tag:blogger.com,1999:blog-6637736252081011583.post-1253711542059093933</id><published>2009-06-17T07:22:00.000-07:00</published><updated>2009-06-17T07:27:10.218-07:00</updated><title type='text'>Switching from Horizontal to Vertical Split</title><content type='html'>If you have two windows which are horizontally split, and you'd like to make them vertically split instead, the following command sequence works well:&lt;br /&gt;&lt;br /&gt;&amp;lt;ctrl-w&amp;gt;t&amp;lt;ctrl-w&amp;gt;H&lt;br /&gt;&lt;br /&gt;To orient them back to a horizontal split do this:&lt;br /&gt;&lt;br /&gt;&amp;lt;ctrl-w&amp;gt;t&amp;lt;ctrl-w&amp;gt;K&lt;br /&gt;&lt;br /&gt;Note that if the top (or left) window is already current you can omit the &amp;lt;ctrl-w&amp;gt;t and simply do &amp;lt;ctrl-w&amp;gt;H or &amp;lt;ctrl-w&amp;gt;K.</content><link rel='replies' type='application/atom+xml' href='https://dailyvim.blogspot.com/feeds/1253711542059093933/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=6637736252081011583&amp;postID=1253711542059093933' title='3 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/1253711542059093933'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/1253711542059093933'/><link rel='alternate' type='text/html' href='http://dailyvim.blogspot.com/2009/06/switching-from-horizontal-to-vertical.html' title='Switching from Horizontal to Vertical Split'/><author><name>Travis Whitton</name><uri>https://www.blogger.com/profile/14592647486468034166</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='25' height='32' src='//2.bp.blogspot.com/__iSTMw6favA/SKRZVI-XWkI/AAAAAAAAAYc/6xWMySJqLN4/s32-R/willie.jpg'/></author><thr:total>3</thr:total></entry><entry><id>tag:blogger.com,1999:blog-6637736252081011583.post-4049577878252278630</id><published>2009-06-15T05:51:00.000-07:00</published><updated>2009-06-15T05:51:01.200-07:00</updated><title type='text'>Vi Mode in Readline Applications</title><content type='html'>Mike Pea submitted this comment in a recent tip, and I thought it deserved it's own post.&lt;br /&gt;&lt;br /&gt;&lt;i&gt;If you find that you do like using vi editing mode (and what's not to love about it :), add 'set editing-mode vi' to your .inputrc, and vi mode will work in any readline based client, eg psql, irb.&lt;br /&gt;&lt;/i&gt;&lt;br /&gt;Thanks Mike!</content><link rel='replies' type='application/atom+xml' href='https://dailyvim.blogspot.com/feeds/4049577878252278630/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=6637736252081011583&amp;postID=4049577878252278630' title='7 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/4049577878252278630'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/4049577878252278630'/><link rel='alternate' type='text/html' href='http://dailyvim.blogspot.com/2009/06/vi-mode-in-readline-applications.html' title='Vi Mode in Readline Applications'/><author><name>Travis Whitton</name><uri>https://www.blogger.com/profile/14592647486468034166</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='25' height='32' src='//2.bp.blogspot.com/__iSTMw6favA/SKRZVI-XWkI/AAAAAAAAAYc/6xWMySJqLN4/s32-R/willie.jpg'/></author><thr:total>7</thr:total></entry><entry><id>tag:blogger.com,1999:blog-6637736252081011583.post-4339311603632896387</id><published>2009-06-12T07:40:00.000-07:00</published><updated>2009-06-12T09:34:39.096-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='macro'/><category scheme='http://www.blogger.com/atom/ns#' term='recursively'/><category scheme='http://www.blogger.com/atom/ns#' term='vim'/><title type='text'>Recursive Macros</title><content type='html'>A friend at work pointed out to me yesterday that he had accidentally written a recursive macro in Vim. I had never thought about the fact that this was possible, but I'd imagine there could be some potential usefulness for these somewhere. As a trivial (and useless) example, here's a recursive macro to move the cursor to the end of the current line one step at a time: qal@aq&lt;br /&gt;&lt;br /&gt;Edit: A little research has shown that this is an excellent way to repeat a macro to the end of the file. Say that you have a file containing one number per line from top to bottom:&lt;br /&gt;&lt;br /&gt;123&lt;br /&gt;234&lt;br /&gt;345&lt;br /&gt;456&lt;br /&gt;&lt;br /&gt;Put the cursor on the first line and type the following:&lt;br /&gt;&lt;br /&gt;qaq (clears register "a" of any previous macros)&lt;br /&gt;qa&amp;lt;ctrl-a&amp;gt;&amp;lt;enter&amp;gt;@aq&lt;br /&gt;&lt;br /&gt;Now type @a once more, and the macro will run to the bottom of the file incrementing the value on each line by one leaving you with the following:&lt;br /&gt;&lt;br /&gt;124&lt;br /&gt;235&lt;br /&gt;346&lt;br /&gt;457</content><link rel='replies' type='application/atom+xml' href='https://dailyvim.blogspot.com/feeds/4339311603632896387/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=6637736252081011583&amp;postID=4339311603632896387' title='7 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/4339311603632896387'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/4339311603632896387'/><link rel='alternate' type='text/html' href='http://dailyvim.blogspot.com/2009/06/recursive-macros.html' title='Recursive Macros'/><author><name>Travis Whitton</name><uri>https://www.blogger.com/profile/14592647486468034166</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='25' height='32' src='//2.bp.blogspot.com/__iSTMw6favA/SKRZVI-XWkI/AAAAAAAAAYc/6xWMySJqLN4/s32-R/willie.jpg'/></author><thr:total>7</thr:total></entry><entry><id>tag:blogger.com,1999:blog-6637736252081011583.post-8627646555396742504</id><published>2009-06-05T06:46:00.000-07:00</published><updated>2009-06-05T06:46:00.738-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='screen'/><category scheme='http://www.blogger.com/atom/ns#' term='vim'/><category scheme='http://www.blogger.com/atom/ns#' term='os x'/><title type='text'>Screen in OS X Leopard</title><content type='html'>Sorry for the horribly platform specific tip, but this has been annoying me, and I thought it might help someone. If you're running OS X 10.5, you may have noticed that screen destroys your path when you start it. This can easily be remedied by putting the following in your ~/.screenrc.&lt;br /&gt;&lt;br /&gt;shell -/bin/bash</content><link rel='replies' type='application/atom+xml' href='https://dailyvim.blogspot.com/feeds/8627646555396742504/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=6637736252081011583&amp;postID=8627646555396742504' title='4 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/8627646555396742504'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/8627646555396742504'/><link rel='alternate' type='text/html' href='http://dailyvim.blogspot.com/2009/06/screen-in-os-x-leopard.html' title='Screen in OS X Leopard'/><author><name>Travis Whitton</name><uri>https://www.blogger.com/profile/14592647486468034166</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='25' height='32' src='//2.bp.blogspot.com/__iSTMw6favA/SKRZVI-XWkI/AAAAAAAAAYc/6xWMySJqLN4/s32-R/willie.jpg'/></author><thr:total>4</thr:total></entry><entry><id>tag:blogger.com,1999:blog-6637736252081011583.post-3183613288909500065</id><published>2009-06-04T06:20:00.000-07:00</published><updated>2009-06-04T06:20:01.379-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='eclim'/><category scheme='http://www.blogger.com/atom/ns#' term='eclipse'/><category scheme='http://www.blogger.com/atom/ns#' term='vim'/><title type='text'>Vim + Eclipse = Eclim</title><content type='html'>I know some of you may consider this to sacrilegious, but a lot of programmers are subjected to using Eclipse from time to time for various reasons. For those of you that need Eclipse for a given plugin, debugging session, or what have you, the &lt;a href="http://eclim.sourceforge.net/"&gt;Eclim project&lt;/a&gt; provides a flexible solution for integrating Vim with Eclipse.&lt;br /&gt;&lt;br /&gt;Using Eclim gives you three options for how you'd like to integrate Vim and Eclipse. The least intrusive allows you to run a headless Eclipse and control it via Vim. This makes Eclipse act as sort of an app server, which Vim can pipe to and from.&lt;br /&gt;&lt;br /&gt;The second option allows you to run both programs side by side. This way, Vim is still running standalone, but you can control Eclipse directly should you need to.&lt;br /&gt;&lt;br /&gt;The final option allows you to embed Vim directly into Eclipse. You'll lose some screen real estate when using this option, but it may suit certain people's needs.&lt;br /&gt;&lt;br /&gt;I'm not really a fan of Eclipse by any stretch of the imagination, but for things like Java debugging, it does offer some utility, so if you're in the same boat, you should give Eclim a try.</content><link rel='replies' type='application/atom+xml' href='https://dailyvim.blogspot.com/feeds/3183613288909500065/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=6637736252081011583&amp;postID=3183613288909500065' title='6 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/3183613288909500065'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/3183613288909500065'/><link rel='alternate' type='text/html' href='http://dailyvim.blogspot.com/2009/06/vim-eclipse-eclim.html' title='Vim + Eclipse = Eclim'/><author><name>Travis Whitton</name><uri>https://www.blogger.com/profile/14592647486468034166</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='25' height='32' src='//2.bp.blogspot.com/__iSTMw6favA/SKRZVI-XWkI/AAAAAAAAAYc/6xWMySJqLN4/s32-R/willie.jpg'/></author><thr:total>6</thr:total></entry><entry><id>tag:blogger.com,1999:blog-6637736252081011583.post-4010432299766017484</id><published>2009-06-03T12:37:00.000-07:00</published><updated>2009-06-03T12:41:28.859-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='recursively'/><category scheme='http://www.blogger.com/atom/ns#' term='replace'/><category scheme='http://www.blogger.com/atom/ns#' term='ctrl-m'/><title type='text'>Recursively Replace Ctrl-M</title><content type='html'>Ctrl-M's are a plague inflicted upon programmers everywhere. I've mentioned a number of ways to deal with them in the past, and some readers have also contributed helpful advice as well. Today I ran into a situation where I needed to do a huge source diff on two different directory trees. My preprocessor happened to strip out all Ctrl-M leading to a bunch of false positives on files that differed. Some Google'ing around lead me to find this gem, which recursively strips Ctrl-M on all files within a given directory.&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;&lt;br /&gt;for file in $(find /path/to/dir -type f); do&lt;br /&gt;   tr -d '\r' &lt;$file &gt;temp.$$ &amp;&amp; mv temp.$$ $file&lt;br /&gt;done&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;&lt;br /&gt;In order to give credit where it's due, a user named blowtorch gave the tip at &lt;a href="http://www.unix.com/shell-programming-scripting/38992-how-replace-control-m-all-files-folder.html"&gt;the following forum&lt;/a&gt;.</content><link rel='replies' type='application/atom+xml' href='https://dailyvim.blogspot.com/feeds/4010432299766017484/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=6637736252081011583&amp;postID=4010432299766017484' title='9 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/4010432299766017484'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/4010432299766017484'/><link rel='alternate' type='text/html' href='http://dailyvim.blogspot.com/2009/06/recursively-replace-ctrl-m.html' title='Recursively Replace Ctrl-M'/><author><name>Travis Whitton</name><uri>https://www.blogger.com/profile/14592647486468034166</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='25' height='32' src='//2.bp.blogspot.com/__iSTMw6favA/SKRZVI-XWkI/AAAAAAAAAYc/6xWMySJqLN4/s32-R/willie.jpg'/></author><thr:total>9</thr:total></entry><entry><id>tag:blogger.com,1999:blog-6637736252081011583.post-541857499431146174</id><published>2009-06-03T06:18:00.000-07:00</published><updated>2009-06-03T06:18:00.905-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='autocomplete'/><category scheme='http://www.blogger.com/atom/ns#' term='comment'/><category scheme='http://www.blogger.com/atom/ns#' term='disable'/><category scheme='http://www.blogger.com/atom/ns#' term='vim'/><title type='text'>Disable Comment Autocompletion</title><content type='html'>There are times when Vim's autocompletion of comments gets in my way more than it helps me. Fortunately, disabling comment autocomplete is easy. Just add the following to your vimrc.&lt;br /&gt;&lt;br /&gt;au FileType * setl fo-=cro</content><link rel='replies' type='application/atom+xml' href='https://dailyvim.blogspot.com/feeds/541857499431146174/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=6637736252081011583&amp;postID=541857499431146174' title='5 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/541857499431146174'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/541857499431146174'/><link rel='alternate' type='text/html' href='http://dailyvim.blogspot.com/2009/06/disable-comment-autocompletion.html' title='Disable Comment Autocompletion'/><author><name>Travis Whitton</name><uri>https://www.blogger.com/profile/14592647486468034166</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='25' height='32' src='//2.bp.blogspot.com/__iSTMw6favA/SKRZVI-XWkI/AAAAAAAAAYc/6xWMySJqLN4/s32-R/willie.jpg'/></author><thr:total>5</thr:total></entry><entry><id>tag:blogger.com,1999:blog-6637736252081011583.post-410898530269053698</id><published>2009-06-02T06:14:00.000-07:00</published><updated>2009-06-03T07:09:59.844-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='snippit'/><category scheme='http://www.blogger.com/atom/ns#' term='textmate'/><category scheme='http://www.blogger.com/atom/ns#' term='vim'/><title type='text'>Snippit Support</title><content type='html'>Next time someone who uses TextMate starts blabbering on about how awesome snippits are, politely remind them that Vim supports snippits as well. You can download the snippitsEmu plugin &lt;a href="http://www.vim.org/scripts/script.php?script_id=1318"&gt;here&lt;/a&gt;, and it works quite well. For those unfamilar with snippits, they allow tab-style completion of boilerplate code. For example, you might type class, hit tab, and then a template for a class will be expanded based on the current filetype Vim is set to.&lt;br /&gt;&lt;br /&gt;Update: Several readers have cited &lt;a href="http://www.vim.org/scripts/script.php?script_id=2540"&gt;snipMate&lt;/a&gt; as a preferred alternative to snippitsEmu. Thanks guys!</content><link rel='replies' type='application/atom+xml' href='https://dailyvim.blogspot.com/feeds/410898530269053698/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=6637736252081011583&amp;postID=410898530269053698' title='7 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/410898530269053698'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/410898530269053698'/><link rel='alternate' type='text/html' href='http://dailyvim.blogspot.com/2009/06/snippit-support.html' title='Snippit Support'/><author><name>Travis Whitton</name><uri>https://www.blogger.com/profile/14592647486468034166</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='25' height='32' src='//2.bp.blogspot.com/__iSTMw6favA/SKRZVI-XWkI/AAAAAAAAAYc/6xWMySJqLN4/s32-R/willie.jpg'/></author><thr:total>7</thr:total></entry><entry><id>tag:blogger.com,1999:blog-6637736252081011583.post-8633413603337034710</id><published>2009-06-01T11:11:00.000-07:00</published><updated>2009-06-01T11:13:19.717-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='easier'/><category scheme='http://www.blogger.com/atom/ns#' term='editing'/><category scheme='http://www.blogger.com/atom/ns#' term='command'/><category scheme='http://www.blogger.com/atom/ns#' term='vim'/><category scheme='http://www.blogger.com/atom/ns#' term='line'/><title type='text'>Easier Command Line Editing</title><content type='html'>Assuming you're using the bash shell, the following can be helpful when composing long command lines.&lt;br /&gt;&lt;br /&gt;Start typing on the command line and then type Ctrl-x Ctrl-e, it should drop you into your system's default editor (hopefully Vim) and allow you to edit the command line from there. Once finished, save the command line, and bash will run the command.</content><link rel='replies' type='application/atom+xml' href='https://dailyvim.blogspot.com/feeds/8633413603337034710/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=6637736252081011583&amp;postID=8633413603337034710' title='10 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/8633413603337034710'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/8633413603337034710'/><link rel='alternate' type='text/html' href='http://dailyvim.blogspot.com/2009/06/easier-command-line-editing.html' title='Easier Command Line Editing'/><author><name>Travis Whitton</name><uri>https://www.blogger.com/profile/14592647486468034166</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='25' height='32' src='//2.bp.blogspot.com/__iSTMw6favA/SKRZVI-XWkI/AAAAAAAAAYc/6xWMySJqLN4/s32-R/willie.jpg'/></author><thr:total>10</thr:total></entry><entry><id>tag:blogger.com,1999:blog-6637736252081011583.post-1681443200964403386</id><published>2009-05-18T10:55:00.000-07:00</published><updated>2009-05-18T11:00:19.220-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='cookbook'/><category scheme='http://www.blogger.com/atom/ns#' term='vim'/><title type='text'>Vim Cookbook</title><content type='html'>Run Paint Run Run has contacted me to share a Vim Cookbook he has been working on. It's a creative commons work, and although it's a work in progress, it appears that it's already chock full of useful information. The cookbook is forumulated in a Problem/Solution type format, and I highly recommend giving it a look.&lt;br /&gt;&lt;br /&gt;&lt;a href="http://vim.runpaint.org/"&gt;Vim Recipes - Free cookbook for the Vim text editor&lt;/a&gt;</content><link rel='replies' type='application/atom+xml' href='https://dailyvim.blogspot.com/feeds/1681443200964403386/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=6637736252081011583&amp;postID=1681443200964403386' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/1681443200964403386'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/1681443200964403386'/><link rel='alternate' type='text/html' href='http://dailyvim.blogspot.com/2009/05/vim-cookbook.html' title='Vim Cookbook'/><author><name>Travis Whitton</name><uri>https://www.blogger.com/profile/14592647486468034166</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='25' height='32' src='//2.bp.blogspot.com/__iSTMw6favA/SKRZVI-XWkI/AAAAAAAAAYc/6xWMySJqLN4/s32-R/willie.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-6637736252081011583.post-2999791700587835306</id><published>2009-04-29T07:31:00.000-07:00</published><updated>2009-04-30T11:06:41.252-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='schebang'/><category scheme='http://www.blogger.com/atom/ns#' term='vim'/><title type='text'>Vim Sugar</title><content type='html'>Chris Sutter writes:&lt;br /&gt;&lt;br /&gt;I have a script and mapping in my ~/.vimrc:&lt;br /&gt;&lt;br /&gt;&lt;font face="monospace" color="#ccc"&gt;&lt;br /&gt;function! CheckForShebang()&lt;br&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; if (match( getline(1) , '^\#!') == 0)&lt;br&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; map &amp;lt;F5&amp;gt; :!./%&amp;lt;CR&amp;gt;&lt;br&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; else&lt;br&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; unmap &amp;lt;F%&amp;gt;&lt;br&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; end&lt;br&gt;&lt;br /&gt;endfunction&lt;br&gt;&lt;br /&gt;map &amp;lt;F5&amp;gt; :call CheckForShebang()&lt;br&gt;&lt;br /&gt;&lt;/font&gt;&lt;br /&gt;&lt;br /&gt;This way, if i'm editing a script with a shebang at the top and i hit &amp;lt;F5&amp;gt;, it maps &amp;lt;F5&amp;gt; to run the script (if not, &amp;lt;F5&amp;gt; is unmapped, so that it doesn't keep checking if I hit it again). I always found myself mapping &amp;lt;F5&amp;gt; by hand to run the current script while i was editting/debugging and I'd frequently lose track of whether I had mapped it or not. You could, of course, replace &amp;lt;F5&amp;gt; with your favorite run/compile/debug/etc key, it just happens to be my standard (from my QBasic days hehe).&lt;br /&gt;&lt;br /&gt;Thanks for the tip Chris!</content><link rel='replies' type='application/atom+xml' href='https://dailyvim.blogspot.com/feeds/2999791700587835306/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=6637736252081011583&amp;postID=2999791700587835306' title='14 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/2999791700587835306'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/2999791700587835306'/><link rel='alternate' type='text/html' href='http://dailyvim.blogspot.com/2009/04/chris-sutter-writes-i-have-script-and.html' title='Vim Sugar'/><author><name>Travis Whitton</name><uri>https://www.blogger.com/profile/14592647486468034166</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='25' height='32' src='//2.bp.blogspot.com/__iSTMw6favA/SKRZVI-XWkI/AAAAAAAAAYc/6xWMySJqLN4/s32-R/willie.jpg'/></author><thr:total>14</thr:total></entry><entry><id>tag:blogger.com,1999:blog-6637736252081011583.post-276367138029667130</id><published>2009-04-15T07:30:00.000-07:00</published><updated>2009-04-15T10:49:39.638-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='mode'/><category scheme='http://www.blogger.com/atom/ns#' term='ctrl-o'/><category scheme='http://www.blogger.com/atom/ns#' term='vim'/><category scheme='http://www.blogger.com/atom/ns#' term='insert'/><title type='text'>i_Ctrl-O</title><content type='html'>Derek Wyatt shared this in a recent comment, and I thought it deserved it's own tip.&lt;br /&gt;&lt;br /&gt;If you're in insert mode, and you hit ctrl-o, Vim will accept one normal mode command and then return you to insert mode. Two examples given showed some typical usage:&lt;br /&gt;&lt;br /&gt;&amp;lt;C-o&amp;gt;ma - Mark the current position and then keep typing.&lt;br /&gt;&lt;br /&gt;&amp;lt;C-o&amp;gt;gql - Format the current line and keep typing&lt;br /&gt;&lt;br /&gt;A final blurb from the comment:&lt;br /&gt;&lt;br /&gt;"The next type you do &amp;lt;Esc&amp;gt;(thing)a you might remember that you could have done that with &amp;lt;C-o&amp;gt;".&lt;br /&gt;&lt;br /&gt;Thanks Derek!</content><link rel='replies' type='application/atom+xml' href='https://dailyvim.blogspot.com/feeds/276367138029667130/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=6637736252081011583&amp;postID=276367138029667130' title='7 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/276367138029667130'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/276367138029667130'/><link rel='alternate' type='text/html' href='http://dailyvim.blogspot.com/2009/04/ictrl-o.html' title='i_Ctrl-O'/><author><name>Travis Whitton</name><uri>https://www.blogger.com/profile/14592647486468034166</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='25' height='32' src='//2.bp.blogspot.com/__iSTMw6favA/SKRZVI-XWkI/AAAAAAAAAYc/6xWMySJqLN4/s32-R/willie.jpg'/></author><thr:total>7</thr:total></entry><entry><id>tag:blogger.com,1999:blog-6637736252081011583.post-15094929858983417</id><published>2009-04-14T08:36:00.000-07:00</published><updated>2009-04-14T08:41:45.818-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='hidden'/><category scheme='http://www.blogger.com/atom/ns#' term='vim'/><category scheme='http://www.blogger.com/atom/ns#' term='set'/><title type='text'>Set  Hidden</title><content type='html'>If you've ever tried to type :only and had Vim refuse to hide existing buffers because they contain changes, you can use :set hidden to override this behavior. Just remember to keep the possibility of hidden modified buffers in mind when you're doing a :q!.</content><link rel='replies' type='application/atom+xml' href='https://dailyvim.blogspot.com/feeds/15094929858983417/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=6637736252081011583&amp;postID=15094929858983417' title='2 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/15094929858983417'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/15094929858983417'/><link rel='alternate' type='text/html' href='http://dailyvim.blogspot.com/2009/04/set-hidden.html' title='Set  Hidden'/><author><name>Travis Whitton</name><uri>https://www.blogger.com/profile/14592647486468034166</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='25' height='32' src='//2.bp.blogspot.com/__iSTMw6favA/SKRZVI-XWkI/AAAAAAAAAYc/6xWMySJqLN4/s32-R/willie.jpg'/></author><thr:total>2</thr:total></entry><entry><id>tag:blogger.com,1999:blog-6637736252081011583.post-3153475527816488787</id><published>2009-04-13T06:41:00.001-07:00</published><updated>2009-04-13T06:42:58.678-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='s-exp'/><category scheme='http://www.blogger.com/atom/ns#' term='yank'/><category scheme='http://www.blogger.com/atom/ns#' term='vim'/><title type='text'>Yank S-Exp</title><content type='html'>If you're hacking a Lisp dialect in Vim, you can do type ya( to yank the current s-exp into the default buffer.</content><link rel='replies' type='application/atom+xml' href='https://dailyvim.blogspot.com/feeds/3153475527816488787/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=6637736252081011583&amp;postID=3153475527816488787' title='7 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/3153475527816488787'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/3153475527816488787'/><link rel='alternate' type='text/html' href='http://dailyvim.blogspot.com/2009/04/yank-s-exp.html' title='Yank S-Exp'/><author><name>Travis Whitton</name><uri>https://www.blogger.com/profile/14592647486468034166</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='25' height='32' src='//2.bp.blogspot.com/__iSTMw6favA/SKRZVI-XWkI/AAAAAAAAAYc/6xWMySJqLN4/s32-R/willie.jpg'/></author><thr:total>7</thr:total></entry><entry><id>tag:blogger.com,1999:blog-6637736252081011583.post-6453699244100703712</id><published>2009-04-10T12:57:00.000-07:00</published><updated>2009-04-10T13:00:04.326-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='ex'/><category scheme='http://www.blogger.com/atom/ns#' term='command'/><category scheme='http://www.blogger.com/atom/ns#' term='yank'/><category scheme='http://www.blogger.com/atom/ns#' term='vim'/><category scheme='http://www.blogger.com/atom/ns#' term='line'/><title type='text'>Pull Into Ex</title><content type='html'>If you position your cursor over a given word and type :&amp;lt;ctrl-r&amp;gt;&amp;lt;ctrl-w&amp;gt; it will pull the value into your current ex mode command line. This is great for yanking long values into substitutions among other things.&lt;br /&gt;&lt;br /&gt;Thanks to Nate for the tip!</content><link rel='replies' type='application/atom+xml' href='https://dailyvim.blogspot.com/feeds/6453699244100703712/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=6637736252081011583&amp;postID=6453699244100703712' title='2 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/6453699244100703712'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/6453699244100703712'/><link rel='alternate' type='text/html' href='http://dailyvim.blogspot.com/2009/04/pull-into-ex.html' title='Pull Into Ex'/><author><name>Travis Whitton</name><uri>https://www.blogger.com/profile/14592647486468034166</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='25' height='32' src='//2.bp.blogspot.com/__iSTMw6favA/SKRZVI-XWkI/AAAAAAAAAYc/6xWMySJqLN4/s32-R/willie.jpg'/></author><thr:total>2</thr:total></entry><entry><id>tag:blogger.com,1999:blog-6637736252081011583.post-787072975002314096</id><published>2009-04-08T08:15:00.000-07:00</published><updated>2009-04-08T08:19:23.757-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='reduce'/><category scheme='http://www.blogger.com/atom/ns#' term='bash'/><category scheme='http://www.blogger.com/atom/ns#' term='project'/><title type='text'>bashreduce</title><content type='html'>I stumbled across this project recently. It's a program that allows you to apply standard shell tools in a map reduce style fashion. Large memory hungry tasks like sorting can be distributed across machines to maximize throughput. As a bonus, it's written in bash, so it's highly portable and works with a combination of vanilla shell utilities and ssh shared-key authentication.&lt;br /&gt;&lt;br /&gt;&lt;a href="http://github.com/erikfrey/bashreduce/tree/master"&gt;The bashreduce project&lt;/a&gt;.</content><link rel='replies' type='application/atom+xml' href='https://dailyvim.blogspot.com/feeds/787072975002314096/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=6637736252081011583&amp;postID=787072975002314096' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/787072975002314096'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/787072975002314096'/><link rel='alternate' type='text/html' href='http://dailyvim.blogspot.com/2009/04/bashreduce.html' title='bashreduce'/><author><name>Travis Whitton</name><uri>https://www.blogger.com/profile/14592647486468034166</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='25' height='32' src='//2.bp.blogspot.com/__iSTMw6favA/SKRZVI-XWkI/AAAAAAAAAYc/6xWMySJqLN4/s32-R/willie.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-6637736252081011583.post-6710597987727247279</id><published>2009-04-08T08:02:00.001-07:00</published><updated>2009-04-08T08:03:39.767-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='mode'/><category scheme='http://www.blogger.com/atom/ns#' term='vim'/><category scheme='http://www.blogger.com/atom/ns#' term='insert'/><title type='text'>Insert Mode Shortcuts</title><content type='html'>Here are some handy shortcuts that you can utilize while you're in insert mode.&lt;br /&gt;&lt;br /&gt;ctrl-t - adjust current line one indent right&lt;br /&gt;ctrl-d - adjust current line one indent left&lt;br /&gt;ctrl-w - backspace over a word&lt;br /&gt;ctrl-u - delete to beginning of indent</content><link rel='replies' type='application/atom+xml' href='https://dailyvim.blogspot.com/feeds/6710597987727247279/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=6637736252081011583&amp;postID=6710597987727247279' title='6 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/6710597987727247279'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/6710597987727247279'/><link rel='alternate' type='text/html' href='http://dailyvim.blogspot.com/2009/04/insert-mode-shortcuts.html' title='Insert Mode Shortcuts'/><author><name>Travis Whitton</name><uri>https://www.blogger.com/profile/14592647486468034166</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='25' height='32' src='//2.bp.blogspot.com/__iSTMw6favA/SKRZVI-XWkI/AAAAAAAAAYc/6xWMySJqLN4/s32-R/willie.jpg'/></author><thr:total>6</thr:total></entry><entry><id>tag:blogger.com,1999:blog-6637736252081011583.post-4310895503790890176</id><published>2009-04-06T06:00:00.000-07:00</published><updated>2009-04-15T07:49:39.918-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='functional'/><category scheme='http://www.blogger.com/atom/ns#' term='erlang'/><category scheme='http://www.blogger.com/atom/ns#' term='programming'/><category scheme='http://www.blogger.com/atom/ns#' term='clojure'/><category scheme='http://www.blogger.com/atom/ns#' term='scala'/><category scheme='http://www.blogger.com/atom/ns#' term='haskell'/><category scheme='http://www.blogger.com/atom/ns#' term='lisp'/><title type='text'>Why Functional Programming Matters</title><content type='html'>I'm always trying to sharpen my skills as a programmer. One approach I've been using to become a better programmer is to learn as many development methodologies as possible. In the past few years, I've become a big fan of functional programming. The basic idea behind functional programming is to compose your programs using functions that return a single value and avoid side effects whenever possible. A side effect is an action that is not required for a function to do it's work. An example of a function with a side effect would be:&lt;br /&gt;&lt;br /&gt;function sum(a, b) {&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print "a + b = " + (a + b)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return a + b&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;In this case, the print statement wouldn't be required to accurately calculate the sum, so it would be considered a side effect. A pure functional language prohibits side effects altogether; although, most functional languages allow some level of impurity for convenience.&lt;br /&gt;&lt;br /&gt;Another common feature of functional programming is the use of higher order functions. Higher order functions are functions that take functions as their arguments; thereby, providing an additional level of abstraction. An example of a higher order function included in most modern languages would be the map function.&lt;br /&gt;&lt;br /&gt;function square(x) { return x * x }&lt;br /&gt;numbers = [1, 2, 3, 4, 5]&lt;br /&gt;squares = map(square, numbers)&lt;br /&gt;print squares&lt;br /&gt;[1, 4, 9, 16, 25]&lt;br /&gt;&lt;br /&gt;Higher order functions can typically take anonymous functions as their arguments as well leading to increased flexibility.&lt;br /&gt;&lt;br /&gt;I can already hear you groaning as you read this article and saying, "yeah yeah, my language can do all that too... what's the point?" Well, in the typical zen fashion of functional languages, it's not always what you can do that matters; rather it's what you can't do. A striking difference between a number of functional languages and their imperative counterparts is how mutability is handled.&lt;br /&gt;&lt;br /&gt;A number of functional languages such as Haskell, Erlang, and Clojure address the majority of their built-in types as immutable. This means that once a value is assigned to a local variable, it cannot be changed. At face value, this may seem like a huge disadvantage and might even lead one to believe that certain types of programs might be impossible to write. The truth is that any imperative program can be rewritten in a functional style but doing so requires the adoption of a new set of tools. Specifically, recursion must be adopted in lieu of traditional iteration. Things like closures can be used to simulate state, and objects are generally thrown by the wayside.&lt;br /&gt;&lt;br /&gt;At this point, the resounding question in your mind is probably, "why bother?" Well, fortunately there's a very strong reason behind all this shifting of methodology, and that's concurrency. Anybody that's written a non-trivial multi-threaded program in an imperative language has dealt with the difficult issues of synchronization, locking, and sharing of state. The larger and more complex the program, the more difficult it becomes to avoid subtle errors and race conditions. For most programmers writing traditional multi-threaded applications, there are more things that can go wrong than right.&lt;br /&gt;&lt;br /&gt;Functional programs that operate on immutable data don't have to deal with any of these issues. Since nothing is shared, there's no potential for race conditions, multiple threads stomping on one another's data, or any of the other trappings one might traditionally succumb to. Freeing the programmer from worrying about such things allows focus to be shifted to solving the actual problem at hand instead of dealing with the fine grained details of threading semantics.&lt;br /&gt;&lt;br /&gt;Why should you care about threading? I believe the introduction to Java Concurrency in Practice puts it well when they say, "For the past 30 years, computer performance has been driven by Moore's Law; from now on, it will be driven by Amdahl's Law." Basically, processors aren't getting any faster. For many years, programmers have written code under the assumption that performance wasn't an issue because the next generation of processors would pick up the slack. We've reached the point where we'll never be able to assume this again. From this point on, things will become increasingly parallel, which means that learning to work with multi-core machines will become an increasingly marketable skill.&lt;br /&gt;&lt;br /&gt;Traditionally relegated to academia, theorem proving, and compiler writing, functional languages are finally becoming mainstream by filling the multi-core niche. Even if you don't adopt a functional language for your day job, taking the time to learn a different method of problem solving will make you a better programmer and provide valuable techniques you can use in your day to day work.&lt;br /&gt;&lt;br /&gt;This being said, there are some really nice languages out there to play around with. I will briefly highlight a handful of them for your perusal. Please take note, that not all of these adhere explicitly to the immutable state share nothing model previously mentioned; although, most provide exceptional facilities for multi-core programming.&lt;br /&gt;&lt;br /&gt;&lt;a href="http://clojure.org/"&gt;Clojure&lt;/a&gt; - A modern Lisp running on the JVM. Clojure throws out all the cruft of old world Lisp and provides a lean and mean core with immutable data structures. One of Clojure's core features is excellent concurrency performance, and it also provides seamless access to Java libraries whenever desired.&lt;br /&gt;&lt;br /&gt;&lt;a href="http://www.scala-lang.org/"&gt;Scala&lt;/a&gt; - Adpoted by Twitter to solve their initial concurrency issues that Ruby could not handle, Scala runs on the JVM, which makes deployment a breeze and provides a multi-paradigm approach to development.&lt;br /&gt;&lt;br /&gt;&lt;a href="http://erlang.org/"&gt;Erlang&lt;/a&gt; - Initially developed as a proprietary language by Ericcson, Erlang was open sourced some years back. Erlang makes use of immutable state and sends data back and forth between managed processes using a built-in messaging system. The process model allows code to be seamlessly distributed across several cores, servers, or networks. Ericcson has successfully used Erlang to manage their telco switching on massive networks for many years.&lt;br /&gt;&lt;br /&gt;&lt;a href="http://www.haskell.org/"&gt;Haskell&lt;/a&gt; - A purely functional language with an advanced type system. Haskell provides a robust feature set and an extremely advanced compiler. The ability to introduce arbitrary operators and a non-standard syntax can make Haskell intimidating at first glance, but it's concurrency peformance rivals any other language. Notable projects written in Haskell include the Xmonad window manager and Pugs, a Perl 6 compiler.&lt;br /&gt;&lt;br /&gt;&lt;a href="http://caml.inria.fr/"&gt;OCaml&lt;/a&gt; - Numerous wins in the &lt;a href="http://en.wikipedia.org/wiki/ICFP_Programming_Contest"&gt;ICFP&lt;/a&gt; helped OCaml gain initial notoriety. Native code compilers allow OCaml programs to run at blazing speeds, and a sophisticated type system provides both safety and flexibility.&lt;br /&gt;&lt;br /&gt;&lt;a href="http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/"&gt;F#&lt;/a&gt; - Developed by Microsoft Research, F# is a variant of ML with a core that is similar to OCaml. It runs on .Net and will be a fully supported language in the .NET Framework and Visual Studio ecosystem as part of Visual Studio 2010.&lt;br /&gt;&lt;br /&gt;&lt;a href="http://www.plt-scheme.org/"&gt;PLT Scheme&lt;/a&gt; - A functional language with a history in academia. The ubiquitious MIT book, &lt;a href="http://www.htdp.org/"&gt;how to design programs&lt;/a&gt;, uses PLT as it's host language. Excellent documentation makes PLT a great way to cut your teeth on functional programming, and it's concurrency features are actually pretty good as well. Threading in PLT is based on the mechanism used in &lt;a href="http://cml.cs.uchicago.edu/index.html"&gt;Concurrent ML&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;a href="http://www.newlisp.org/"&gt;New Lisp&lt;/a&gt; - Although including the word "New" in the name of any product might not be the best idea, New Lisp fills a nice niche in the scripted functional language domain. It seems to be at least partially inspired by Paul Graham's &lt;a href="http://www.paulgraham.com/arc.html"&gt;Arc&lt;/a&gt;, and it provides a good number of modern features out of the box.&lt;br /&gt;&lt;br /&gt;&lt;a href="http://sbcl.sourceforge.net/index.html"&gt;SBCL&lt;/a&gt; - One of the de-facto standard Common Lisp implementations. I haven't done any concurrency stuff in Lisp, but I do know that SBCL provides a high quality Lisp implementation for your general Lisp-ing needs. If SBCL doesn't meet your needs, &lt;a href="http://clisp.cons.org/"&gt;Clisp&lt;/a&gt; is another very solid Lisp distribution.&lt;br /&gt;&lt;br /&gt;&lt;a href="http://www.mozilla.org/rhino/"&gt;Javascript&lt;/a&gt; - The ubiquitous Javascript language now has a JVM port and runs everywhere. It's one of the most widely deployed programming languages on earth and allows the application of higher order functions, lambdas, closures, currying, etc. Who would've thought there was a functional language right under your nose?</content><link rel='replies' type='application/atom+xml' href='https://dailyvim.blogspot.com/feeds/4310895503790890176/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=6637736252081011583&amp;postID=4310895503790890176' title='16 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/4310895503790890176'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/4310895503790890176'/><link rel='alternate' type='text/html' href='http://dailyvim.blogspot.com/2009/04/why-functional-programming-matters.html' title='Why Functional Programming Matters'/><author><name>Travis Whitton</name><uri>https://www.blogger.com/profile/14592647486468034166</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='25' height='32' src='//2.bp.blogspot.com/__iSTMw6favA/SKRZVI-XWkI/AAAAAAAAAYc/6xWMySJqLN4/s32-R/willie.jpg'/></author><thr:total>16</thr:total></entry><entry><id>tag:blogger.com,1999:blog-6637736252081011583.post-2765764330831078251</id><published>2009-04-01T07:42:00.000-07:00</published><updated>2009-04-01T08:17:25.526-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='emacs'/><category scheme='http://www.blogger.com/atom/ns#' term='apocalypse'/><category scheme='http://www.blogger.com/atom/ns#' term='vim'/><title type='text'>Goodbye Daily Vim, Hello Emacs</title><content type='html'>After some careful consideration, I've come to realize that it's time to switch editors. Vim has been a good friend, but like an old horse with a broken leg, it's time to put it down. A few days ago, a strange thing happened. &lt;a href="http://en.wikipedia.org/wiki/Richard_Stallman"&gt;Richard Stallman&lt;/a&gt; caught wind of this blog and sent me a DMCA takedown notice for documenting patented proprietary Emacs features (copy and paste). I tried to explain that these features were part of Vim as well, but he insisted that Emacs had prior art (implemented in 1953) and that the blog must be taken down at once. Determined to fight back, I decided to take a hard look at the Emacs internals to find some hidden weakness. After days of wanding through the Elisp forest, it happened... I fell in LOVE! Who would've thought that I could send email, surf the web, and play tetris all inside of my text editor? ZOMFG! I'm sorry folks, but if I would've realized what we've been missing, I wouldn't have wasted your time with all these silly Vim tips. This being said, I'll be shutting down this blog in the next 24 hours and dedicating my life to the &lt;a href="http://www.dina.kvl.dk/%7Eabraham/religion/"&gt;Church of Emacs&lt;/a&gt;&lt;span style="text-decoration: underline;"&gt;.&lt;/span&gt; I feel so seriously about this that I'm quitting my job here at Grooveshark and focusing my professional career on writing Emacs kernel modules and improving Emacs boot time. To any earthings that might be reading this, I've enjoyed my time on your planet, but the spaceship has landed, and I must return home. Farewell.</content><link rel='replies' type='application/atom+xml' href='https://dailyvim.blogspot.com/feeds/2765764330831078251/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=6637736252081011583&amp;postID=2765764330831078251' title='21 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/2765764330831078251'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/2765764330831078251'/><link rel='alternate' type='text/html' href='http://dailyvim.blogspot.com/2009/04/goodbye-daily-vim-hello-emacs.html' title='Goodbye Daily Vim, Hello Emacs'/><author><name>Travis Whitton</name><uri>https://www.blogger.com/profile/14592647486468034166</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='25' height='32' src='//2.bp.blogspot.com/__iSTMw6favA/SKRZVI-XWkI/AAAAAAAAAYc/6xWMySJqLN4/s32-R/willie.jpg'/></author><thr:total>21</thr:total></entry><entry><id>tag:blogger.com,1999:blog-6637736252081011583.post-1272161914990309843</id><published>2009-03-31T09:35:00.000-07:00</published><updated>2009-03-31T09:43:41.468-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='windows'/><category scheme='http://www.blogger.com/atom/ns#' term='remap'/><category scheme='http://www.blogger.com/atom/ns#' term='vim'/><category scheme='http://www.blogger.com/atom/ns#' term='keys'/><title type='text'>Windows Key Re-maps</title><content type='html'>On Windows, Vim has slightly different behavior for a few basic keys. Namely, ctrl-v, ctrl-x, and ctrl-z are re-mapped to make them more familiar to Windows users. Ctrl-v, which is probably the most widely used of these, is re-mapped to ctrl-q. To get the equivalent of a ctrl-z (background process), you can issue the :suspend ex command. I don't believe there are re-mappings for ctrl-a (add) and ctrl-x (subtract); although, you can probably override them in mswin.vim.</content><link rel='replies' type='application/atom+xml' href='https://dailyvim.blogspot.com/feeds/1272161914990309843/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=6637736252081011583&amp;postID=1272161914990309843' title='3 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/1272161914990309843'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/1272161914990309843'/><link rel='alternate' type='text/html' href='http://dailyvim.blogspot.com/2009/03/windows-key-re-maps.html' title='Windows Key Re-maps'/><author><name>Travis Whitton</name><uri>https://www.blogger.com/profile/14592647486468034166</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='25' height='32' src='//2.bp.blogspot.com/__iSTMw6favA/SKRZVI-XWkI/AAAAAAAAAYc/6xWMySJqLN4/s32-R/willie.jpg'/></author><thr:total>3</thr:total></entry><entry><id>tag:blogger.com,1999:blog-6637736252081011583.post-4163566496898203708</id><published>2009-03-31T07:20:00.000-07:00</published><updated>2009-03-31T07:45:33.807-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='survival'/><category scheme='http://www.blogger.com/atom/ns#' term='hack'/><category scheme='http://www.blogger.com/atom/ns#' term='linux'/><title type='text'>Survival Hacks</title><content type='html'>Many years back when I was first starting to get savvy with Linux, a co-worker approached me with a problem. He had yanked the harddrive out of his old Linux router and placed it in a different machine. The old machine had on-board ethernet and used a different driver than the new machine's PCI ethernet card. His only other computer was a laptop, which was currently offline due to the router issue. Thinking it would be an easy job, I downloaded a binary copy of the PCI driver and copied it onto a floppy at work. When I got to his house, I realized there was a bigger issue. My friend didn't have a monitor of any sort for the machine we'd be working on. We could have just given up and borrowed one from work the next day, but we decided to see how far we could get without one. We hooked up a keyboard and booted the machine waiting a few extra minutes to be sure we had a login prompt. From there, we very carefully logged in as root and mounted the floppy. The light on the floppy drive gave us a good indication that we were good so far. Not being able to remember the name of the driver forced me to do a glob copy based on the file extension to the /tmp directory, but again, the light on the floppy drive showed things were working. From there, we had another problem. We weren't sure if modprobe, the command to load a kernel module, would accept wildcards, so the globbing was no good this time. Still totally blind, I typed the following into the command line:&lt;br /&gt;&lt;br /&gt;for I in *.ko; do modprobe ./$I; done&lt;br /&gt;&lt;br /&gt;Fingers crossed, I hoped for the best and typed:&lt;br /&gt;&lt;br /&gt;ifconfig eth0 192.168.0.1 netmask 255.255.255.0&lt;br /&gt;&lt;br /&gt;From there, we plugged in his laptop, and tried to ping the machine. Much to our surprise, it was up and responding. Feeling accomplished, we did an ssh login from there, and got everything setup as it should be. Now, I'm not saying this was totally elite or anything, but it does go to show that a little creative thinking can get you pretty far. Feel free to share your own survival hacks in the comments if you have a similar story.</content><link rel='replies' type='application/atom+xml' href='https://dailyvim.blogspot.com/feeds/4163566496898203708/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=6637736252081011583&amp;postID=4163566496898203708' title='7 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/4163566496898203708'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/4163566496898203708'/><link rel='alternate' type='text/html' href='http://dailyvim.blogspot.com/2009/03/survival-hacks.html' title='Survival Hacks'/><author><name>Travis Whitton</name><uri>https://www.blogger.com/profile/14592647486468034166</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='25' height='32' src='//2.bp.blogspot.com/__iSTMw6favA/SKRZVI-XWkI/AAAAAAAAAYc/6xWMySJqLN4/s32-R/willie.jpg'/></author><thr:total>7</thr:total></entry><entry><id>tag:blogger.com,1999:blog-6637736252081011583.post-733177658403550764</id><published>2009-03-20T04:23:00.000-07:00</published><updated>2009-03-20T04:26:23.803-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='autocompletion'/><category scheme='http://www.blogger.com/atom/ns#' term='vim'/><title type='text'>Out of the box Autocompletion</title><content type='html'>Thanks to Chris Sutter for contributing the following tip:&lt;br /&gt;&lt;br /&gt;(The following applies to versions of vim higher than 7.0)&lt;br /&gt;&lt;br /&gt;If you are editing a file in vim which ends with .php, .html, .css, .js, .sql, .rb, or .py, you can type (while in insert mode) ctrl-x followed by ctrl-o and vim's "omnifunc" feature combines with its built-in autocomplete feature to show autocomplete options specific to the corresponding language/markup. You can subsequently press ctrl-n and ctrl-p to browse through this list. In short, vim has autocomplete functionality for all common web development contexts (and probably some others) out of the box. But it's not just autocomplete.&lt;br /&gt;&lt;br /&gt;If you are editing php (or, i imagine, ruby/python but i didn't try) and the text on which you are autocompleting is the beginning of a valid (builtin) function name, a small window will open at the top of your vim screen showing the&lt;span style="font-style: italic;"&gt; method signature &lt;span style="font-weight: bold;"&gt;with argument names&lt;/span&gt;&lt;/span&gt;! No more jumping over to php.net to see if it's (needle, haystack) or (haystack, needle)...&lt;br /&gt;&lt;br /&gt;Example:&lt;br /&gt;Edit a file called foo.php, enter insert mode, type&lt;br /&gt;&lt;br /&gt;   &amp;lt;?php&lt;br /&gt;   str_r&lt;br /&gt;&lt;br /&gt;Now press ctrl-x ctrl-o and vim shows a box below the cursor containing the following, with the first entry highlighted:&lt;br /&gt;&lt;br /&gt;   str_repeat(    f&lt;br /&gt;   str_replace(  f&lt;br /&gt;   str_rot13(     f&lt;br /&gt;&lt;br /&gt;The "f"s indicate that each entry is a function. If you had entered $_ and pressed c-x c-o, the results would have been "$_COOKIE", "$_ENV", and so on, labeled with "v" for variable)&lt;br /&gt;&lt;br /&gt;The window opened above (since the selection is a function) shows:&lt;br /&gt;&lt;br /&gt;    str_repeat(string input, int multiplier | string&lt;br /&gt;&lt;br /&gt;telling you the full function name, the argument types and names and finally the return type.&lt;br /&gt;&lt;br /&gt;Admittedly, the c-x c-o and c-n/c-p stuff is awkward. I imagine you could remap to tab/shift-tab which is more common for autocompletion browsing in unix environments. The  SuperTab plugin for vim does this for normal file-wise autocompletion (otherwise done in insert mode with c-n and c-p). It could probably be hacked to incorporate omnifunc stuff, too. If I see anything like that out there, I'll send something about it.&lt;br /&gt;&lt;br /&gt;Please let me know if there's anything you think vim &lt;span style="font-style: italic;"&gt;can't&lt;/span&gt; do and I'll see to ensuring you that, in fact, it can and it's easier than you think!</content><link rel='replies' type='application/atom+xml' href='https://dailyvim.blogspot.com/feeds/733177658403550764/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=6637736252081011583&amp;postID=733177658403550764' title='16 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/733177658403550764'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/733177658403550764'/><link rel='alternate' type='text/html' href='http://dailyvim.blogspot.com/2009/03/out-of-box-autocompletion.html' title='Out of the box Autocompletion'/><author><name>Travis Whitton</name><uri>https://www.blogger.com/profile/14592647486468034166</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='25' height='32' src='//2.bp.blogspot.com/__iSTMw6favA/SKRZVI-XWkI/AAAAAAAAAYc/6xWMySJqLN4/s32-R/willie.jpg'/></author><thr:total>16</thr:total></entry><entry><id>tag:blogger.com,1999:blog-6637736252081011583.post-8688337851630735850</id><published>2009-03-17T06:32:00.000-07:00</published><updated>2009-03-17T06:50:56.107-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='cygwin'/><category scheme='http://www.blogger.com/atom/ns#' term='console'/><category scheme='http://www.blogger.com/atom/ns#' term='windows'/><category scheme='http://www.blogger.com/atom/ns#' term='vim'/><title type='text'>Vim + Cygwin Improvements</title><content type='html'>I've been stuck in a Windows environment at work for the last month or so doing Blackberry development. To try and make things more tolerable, I've been doing most of my work in a Cygwin environment; however, the Cygwin Vim build is sub-optimal compared to the native Windows build. This lead me to try and find a way to use Windows Vim seamlessly from inside Cygwin. The following alias worked out nicely:&lt;br /&gt;&lt;br /&gt;[bash-fu borrowed from this &lt;a href="http://vim.wikia.com/wiki/Run_native-Windows_Vim_from_cygwin_without_a_wrapper"&gt;tip&lt;/a&gt;]&lt;br /&gt;&lt;br /&gt;&lt;span style="font-size:78%;"&gt;alias vim='VIM=`cygpath -d "$VIM"` HOME=`cygpath -d "$HOME"` "`cygpath -u "$VIM"`/vim72/vim.exe"'&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;div style="text-align: left;"&gt;In this case, the $VIM environment variable is initially set to C:\Program Files\Vim. It's also important to change the vim72 version number to whatever matches your install.&lt;br /&gt;&lt;br /&gt;The second thing I did, which is making life a lot easier, is switch to using &lt;a href="http://sourceforge.net/projects/console"&gt;Console2&lt;/a&gt; as a replacement for the standard Windows cmd.exe. The combo of Console2, Cygwin, and a decent Vim build is a good bet if you're committed to Windows for whatever reason.&lt;br /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='https://dailyvim.blogspot.com/feeds/8688337851630735850/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=6637736252081011583&amp;postID=8688337851630735850' title='7 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/8688337851630735850'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/8688337851630735850'/><link rel='alternate' type='text/html' href='http://dailyvim.blogspot.com/2009/03/vim-cygwin-improvements.html' title='Vim + Cygwin Improvements'/><author><name>Travis Whitton</name><uri>https://www.blogger.com/profile/14592647486468034166</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='25' height='32' src='//2.bp.blogspot.com/__iSTMw6favA/SKRZVI-XWkI/AAAAAAAAAYc/6xWMySJqLN4/s32-R/willie.jpg'/></author><thr:total>7</thr:total></entry><entry><id>tag:blogger.com,1999:blog-6637736252081011583.post-91522002224740044</id><published>2009-03-10T04:59:00.000-07:00</published><updated>2009-03-10T05:07:00.576-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='pattern'/><category scheme='http://www.blogger.com/atom/ns#' term='swap'/><category scheme='http://www.blogger.com/atom/ns#' term='items'/><category scheme='http://www.blogger.com/atom/ns#' term='vim'/><title type='text'>Change Last, First to First Last</title><content type='html'>Here's a tip borrowed from the Vim help file. Say that you have a list of names like:&lt;br /&gt;&lt;br /&gt;Doe, John&lt;br /&gt;Smith, Peter&lt;br /&gt;&lt;br /&gt;and you want to change that to:&lt;br /&gt;&lt;br /&gt;John Doe&lt;br /&gt;Peter Smith&lt;br /&gt;&lt;br /&gt;You can use the following substitute pattern to easily do so:&lt;br /&gt;&lt;br /&gt;:%s/\([^,]*\), \(.*\)/\2 \1/&lt;br /&gt;&lt;br /&gt;Basically, you're capturing zero or more NOT commas followed by a comma and space and then capturing zero or more of anything. The comma and space are outside the parens, so they're not stored. The parens store the captured groups in the special variables \1, \2, \3, \N from left to right, so the replacement pattern is substituting in the groups in the reverse order they were captured.</content><link rel='replies' type='application/atom+xml' href='https://dailyvim.blogspot.com/feeds/91522002224740044/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=6637736252081011583&amp;postID=91522002224740044' title='5 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/91522002224740044'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/6637736252081011583/posts/default/91522002224740044'/><link rel='alternate' type='text/html' href='http://dailyvim.blogspot.com/2009/03/change-last-first-to-first-last.html' title='Change Last, First to First Last'/><author><name>Travis Whitton</name><uri>https://www.blogger.com/profile/14592647486468034166</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='25' height='32' src='//2.bp.blogspot.com/__iSTMw6favA/SKRZVI-XWkI/AAAAAAAAAYc/6xWMySJqLN4/s32-R/willie.jpg'/></author><thr:total>5</thr:total></entry></feed>