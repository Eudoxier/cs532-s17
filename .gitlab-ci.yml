# Docker Hub has a rich database of pre-built images that can be used
# Docker Hub: hub.docker.com

stages:
    - build
    - test
    - release
    - deploy

cache:
    paths:
        - pelican/pdfs

variables:
    CONTAINER_TEST_IMAGE: registry.gitlab.com/datenstrom/cs532-s17:$CI_BUILD_REF_NAME
    CONTAINER_RELEASE_IMAGE: registry.gitlab.com/datenstrom/cs532-s17:latest


##################
# Assignment One #
##################

# Python

build_assignment_one:
    image: python 
    stage: build 
    script:
        - cd assignments/assignment_one/
        - pip3 install -r requirements.txt
        - python3 setup.py sdist bdist_wheel
    artifacts:
        name: "${CI_PROJECT_NAME}_${CI_PIPELINE_ID}"
        paths:
            - assignments/assignment_one/dist/
    only:
        - master
        

test_assignment_one:
    image: python
    stage: test
    script:
        - cd assignments/assignment_one/
        - pip3 install tox
        - tox
    tags:
        - docker
    only:
        - master


# LaTeX

build_assignment_one_report:
    image: datenstrom/debian-latex
    stage: build
    script:
        - apt-get --yes update && apt-get --yes install texlive-latex-extra python-pygments
        - apt-get --yes install build-essential
        - pdflatex --version
        - cd assignments/assignment_one/docs/
        - make -k
    tags:
        - docker
    artifacts:
        paths:
            - assignments/assignment_one/docs/assignment_one.pdf
    only:
        - master
        - site

##################
# Assignment Two #
##################

# Paper

build_assignment_two_report:
    image: datenstrom/debian-latex
    stage: build
    script:
        - apt-get --yes update && apt-get --yes install texlive-latex-extra python-pygments
        - apt-get --yes install build-essential
        - pdflatex --version
        - cd assignments/assignment_two/docs/
        - make -k
    tags:
        - docker
    artifacts:
        paths:
            - assignments/assignment_two/docs/assignment_two.pdf
    only:
        - master
        - site

# Carbon date docker image

build_carbon_date:
    image: docker:git
    services:
        - docker:dind
    stage: build
    script:
        - mkdir -p docker/
        - cd docker
        - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
        - git clone https://github.com/oduwsdl/CarbonDate.git
        - cd CarbonDate
        - docker build -t $CONTAINER_TEST_IMAGE .
        - docker push $CONTAINER_TEST_IMAGE
    tags:
        - docker
    only:
        - master
        - assignment-2

release_carbon_date:
    image: docker:git
    services:
        - docker:dind
    stage: release
    script:
        - mkdir -p docker/
        - cd docker
        - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
        - docker pull $CONTAINER_TEST_IMAGE
        - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
        - docker push $CONTAINER_RELEASE_IMAGE
    tags:
        - docker
    only:
        - master


####################
# Assignment three #
####################

# Paper

build_assignment_two_report:
    image: datenstrom/debian-latex
    stage: build
    script:
        - apt-get --yes update && apt-get --yes install texlive-latex-extra python-pygments
        - apt-get --yes install build-essential
        - pdflatex --version
        - cd assignments/assignment_three/docs/
        - make -k
    tags:
        - docker
    artifacts:
        paths:
            - assignments/assignment_two/docs/assignment_three.pdf
    only:
        - master
        - site



########
# Site #
########

pages:
    image: python
    stage: deploy
    script:
        - apt-get --yes install git
        - apt-get --yes install libffi-dev libssl-dev # for python crypto
        - cd pelican/pelican-themes
        - git clone https://github.com/alexandrevicenzi/Flex.git
        - cd ../pelican-plugins
        - git clone --recursive https://github.com/getpelican/pelican-plugins.git
        - cd ../
        - pip -V
        - pip install -r requirements.txt
        - fab build                             # End Pelican
        - cd ../                                # Begin Jupyter Notebooks
        - apt-get --yes update && apt-get --yes install texlive pandoc
        - pip install jupyter nbconvert
          #        - cat assignments/assignment_one/notebook-requirements.txt | xargs -n 1 -L 1 pip install
          #        - cat assignments/assignment_two/notebook-requirements.txt | xargs -n 1 -L 1 pip install
        - jupyter nbconvert -y --to html assignments/assignment_one/graph_structure/graph_structure.ipynb
        - jupyter nbconvert -y --to html assignments/assignment_two/notebooks/*.ipynb
        - jupyter nbconvert -y --to html assignments/assignment_three/notebooks/*.ipynb
        - mkdir -p public/notebooks/
        - cp assignments/assignment_one/graph_structure/graph_structure.html public/notebooks
        - cp assignments/assignment_two/notebooks/*.html public/notebooks
        - cp assignments/assignment_two/notebooks/*.png public/notebooks
        - cp assignments/assignment_three/notebooks/*.html public/notebooks
    tags:
        - docker
    artifacts:
        paths:
            - public
    only:
        - master
        - site
